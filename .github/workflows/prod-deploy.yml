# name: Trigger AWS CodePipeline on main push or merge

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   trigger-pipeline:
#     if: github.event_name == 'push' || github.event.pull_request.merged == true
#     runs-on: ubuntu-latest

#     steps:
#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v2
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: us-east-1

#       - name: Trigger CodePipeline
#         run: |
#           aws codepipeline start-pipeline-execution --name prod-order-fulfilment-app 

    
name: Build and Deploy to S3 and CloudFront

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: |
         npx update-browserslist-db@latest
         CI=false npm run build



      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # - name: Deploy to S3
      #   run: |
      #     aws s3 sync build/ s3://your-s3-bucket-name/ --delete

      # - name: Invalidate CloudFront cache
      #   run: |
      #     aws cloudfront create-invalidation \
      #       --distribution-id E1ZX5098G7KNLS \
      #       --paths "/*"
